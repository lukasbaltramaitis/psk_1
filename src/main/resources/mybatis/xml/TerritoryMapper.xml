<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lt.vu.mybatis.dao.TerritoryMapper">
  <resultMap id="BaseResultMap" type="lt.vu.mybatis.model.Territory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 16 22:34:38 EEST 2020.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="countryId" jdbcType="INTEGER" property="countryid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="playerId" jdbcType="INTEGER" property="playerid" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 16 22:34:38 EEST 2020.
    -->
    delete from territories
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="lt.vu.mybatis.model.Territory" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 16 22:34:38 EEST 2020.
    -->
    insert into territories (type, countryId, name, 
      state, playerId)
    values (#{type,jdbcType=VARCHAR}, #{countryid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{playerid,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="lt.vu.mybatis.model.Territory">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 16 22:34:38 EEST 2020.
    -->
    update territories
    set type = #{type,jdbcType=VARCHAR},
      countryId = #{countryid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      playerId = #{playerid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 16 22:34:38 EEST 2020.
    -->
    select id, type, countryId, name, state, playerId
    from territories
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Apr 16 22:34:38 EEST 2020.
    -->
    select id, type, countryId, name, state, playerId
    from territories
  </select>
  <update id="updateByCountryPlayerId">
    update territories
    set playerId = #{playerId,jdbcType=INTEGER}
    where countryId = #{countryId,jdbcType=INTEGER}
  </update>
  <select id="selectByPlayer" resultMap="BaseResultMap">
    select id, type, countryId, name, state, playerId
    from territories
    where playerId = #{playerId,jdbcType=INTEGER}
  </select>
  <update id="unassignPlayerId">
    update territories
    set playerId = NULL,
        state = 0
    where id = #{territoryId,jdbcType=INTEGER}
  </update>
  <update id="assignPlayerId">
    update territories
    set playerId = #{playerId,jdbcType=INTEGER}
    where id = #{territoryId,jdbcType=INTEGER}
  </update>
  <update id="updateByState">
    update territories
    set state = #{state, jdbcType=INTEGER}
    where id = #{territoryId, jdbcType=INTEGER}
  </update>
  <update id="updateStateByPlayer">
    update territories
    set state = #{state, jdbcType=INTEGER}
    where playerId = #{playerId, jdbcType=INTEGER}
  </update>
  <select id="selectFree" resultMap="BaseResultMap">
    select id, type, countryId, name, state, playerId
    from territories
    where playerId IS NULL;
  </select>
  <select id="selectNeighbours" resultMap="BaseResultMap">
    select territories.id, type, countryId, name, state, playerId
    from territories, map
    where (playerId != #{playerId,jdbcType=INTEGER} or playerId is null) and ((map.territory_id = #{territoryId,jdbcType=INTEGER} and
          map.territory_id1 = territories.id) or (map.territory_id1 = #{territoryId,jdbcType=INTEGER} and
                                                  map.territory_id = territories.id))
  </select>
  <select id="selectByPlayerAndState" resultMap="BaseResultMap">
    select id, type, countryId, name, state, playerId
    from territories
    where playerId = #{playerId,jdbcType=INTEGER} and (state != 1 or state is null)
  </select>

</mapper>